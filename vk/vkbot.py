from random import randrange
import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
from vk.vk_info import VKInfo
from vk.vk_auth import token_group, service_key, user_db, password_db
from keyboard import UserKeyboard
from vkinderdb.db_functions import VkinderDB


class VkBot:
    db = VkinderDB(user=user_db, password=password_db)
    keyboard = UserKeyboard

    def __init__(self, token_group, service_key):
        self.vk_session = vk_api.VkApi(token=token_group)
        self.token_group = token_group
        self.service_key = service_key

    def bot_session(self):
        '''–§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–µ—Å—Å–∏—é –∏ –æ–ø—Ä–∞—à–∏–≤–∞–µ—Ç longpoll-—Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.'''

        for event in VkLongPoll(self.vk_session).listen():

            if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                self.user_id = event.user_id

                if event.text.lower() in ('—Å—Ç–∞—Ä—Ç', '–Ω–∞—á–∞—Ç—å', 'start'):
                    self._sender(user_id=self.user_id, message='–ü—Ä–∏–≤–µ—Ç. –≠—Ç–æ –±–æ—Ç –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤ - VKinder!!!',
                                 keyboard=VkBot.keyboard.keyboard_menu())
                    self._add_user_to_db()

                if event.text in ('‚úÖ–ó–∞–¥–∞—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞', 'üîÅ–ò–∑–º–µ–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞'):
                    self._get_search_params()

                if event.text == 'üíó–ù–∞–π—Ç–∏ –ø–∞—Ä—É':
                    self._sender(user_id=self.user_id, message='–ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫',
                                 keyboard=VkBot.keyboard.keyboard_search())
                    if not VkBot.db.search_params_exists(self.user_id):
                        self._sender(user_id=self.user_id,
                                     message='–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –Ω–µ –∑–∞–¥–∞–Ω—ã. –ù–∞–∂–º–∏—Ç–µ '
                                             '–∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", –∞ –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ "–ó–∞–¥–∞—Ç—å '
                                             '–∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞"',
                                     keyboard=VkBot.keyboard.keyboard_search())
                        continue

                    else:
                        self._download_pairs_from_db()
                        self._return_pair()

                if event.text == '‚û°Ô∏è–°–ª–µ–¥—É—é—â–∏–π':
                    self._return_pair()

                if event.text == 'üåü–ò–∑–±—Ä–∞–Ω–Ω–æ–µ':
                    self._show_favorites()

                if event.text == 'üåü–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ':
                    VkBot.db.add_to_favorites(self.user_id, self.partner_id)
                    self._sender(user_id=self.user_id, message='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ')

                if event.text == '‚ùå–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ':
                    self._del_from_favorites()

                if event.text == '–ù–∞–∑–∞–¥':
                    self._sender(user_id=self.user_id, message='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', keyboard=VkBot.keyboard.keyboard_menu())

    def _sender(self, user_id, message, keyboard=None, attachment=None):
        '''–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.'''
        sender_params = {'user_id': user_id, 'message': message, 'random_id': randrange(10 ** 7)}
        if keyboard:
            sender_params['keyboard'] = keyboard.get_keyboard()
        self.vk_session.method('messages.send', sender_params)

    def _add_user_to_db(self):
        '''–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é (user_id, –∏–º—è, —Ñ–∞–º–∏–ª–∏—è, –≤–æ–∑—Ä–∞—Å—Ç, –ø–æ–ª, –≥–æ—Ä–æ–¥, url –ø—Ä–æ—Ñ–∏–ª—è, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è)
         —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.'''
        handler_info = VKInfo(self.service_key, self.user_id)
        user_data = handler_info.get_user_info()
        photos = handler_info.get_photos()

        if isinstance(user_data, dict):
            VkBot.db.add_new_user(user_data, photos)

        elif user_data == 1:
            vk_error = VkBot(self.token_group, self.service_key)
            vk_error._sender(user_id=self.user_id,
                             message='–î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–¥–µ–ª–∞–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –æ—Ç–∫—Ä—ã—Ç—ã–º :)')
        elif user_data == 2:
            vk_error = VkBot(self.token_group, self.service_key)
            vk_error._sender(user_id=self.user_id, message='–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.'
                                                           '\n–î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ—Ñ–∏–ª—è –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â—É—é '
                                                           '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é: \n\n1) –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è (—Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú.–ì–ì–ì–ì); \n2) '
                                                           '–ì–æ—Ä–æ–¥.')

    def _del_from_favorites(self):
        '''–§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.'''
        self._sender(user_id=self.user_id, message='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        for event in VkLongPoll(self.vk_session).listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                number = event.text
                if number.isdigit() and int(number) in self.favorites_ids:
                    partner_id = int(self.favorites_ids[int(number)])
                    VkBot.db.del_from_favorites(self.user_id, partner_id)
                    self._sender(user_id=self.user_id, message='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ')
                    break
                elif number == '–ù–∞–∑–∞–¥':
                    break
                else:
                    self._sender(user_id=self.user_id, message='–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.')
                    continue

    def _show_favorites(self):
        '''–§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ.'''
        favorites_users = VkBot.db.show_favorites_users(finder_id=self.user_id)
        if favorites_users:
            self.favorites_ids, string_list_users = {}, []
            for number, user in enumerate(favorites_users, 1):
                self.favorites_ids[number] = user[0]
                string_list_users.append('\n'.join([f'{str(number)}.', *user[1:]]))

            result_favorites = '\n\n'.join(string_list_users)
            self._sender(user_id=self.user_id,
                         message=f'–°–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n{result_favorites}',
                         keyboard=VkBot.keyboard.favorites())

        else:
            self._sender(user_id=self.user_id, message='–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç')

    def _get_search_params(self):
        '''–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –∏ –∑–∞–Ω–æ—Å–∏—Ç –∏—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.'''

        params = {}
        text_message = '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞:\n' \
                       '1. –í–æ–∑—Ä–∞—Å—Ç –æ—Ç (—á–∏—Å–ª–æ)\n' \
                       '2. –í–æ–∑—Ä–∞—Å—Ç –¥–æ (—á–∏—Å–ª–æ)\n' \
                       '3. –ü–æ–ª (–∂–µ–Ω—Å–∫–∏–π, –º—É–∂—Å–∫–æ–π)\n' \
                       '4. –ì–æ—Ä–æ–¥\n\n' \
                       '' \
                       '–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: 20 35 –∂–µ–Ω—Å–∫–∏–π –ú–æ—Å–∫–≤–∞\n\n'

        self._sender(user_id=self.user_id, message=text_message,
                     keyboard=VkBot.keyboard.search_ok())

        for event in VkLongPoll(self.vk_session).listen():
            if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                user_input = event.text.lower().split()
                if len(user_input) == 4:
                    from_age, to_age, sex, city = user_input
                    if from_age.isdigit() and to_age.isdigit() and (18 <= int(from_age) <= int(to_age)):
                        params['from_age'] = int(from_age)
                        params['to_age'] = int(to_age)

                    else:
                        self._sender(user_id=self.user_id, message='–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. '
                                                                   '–ù–∞—á–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω—å—à–µ 18.'
                                                                   '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.')
                        continue

                    if sex in ('–∂–µ–Ω—Å–∫–∏–π', '–º—É–∂—Å–∫–æ–π'):
                        params['sex'] = sex

                    else:
                        self._sender(user_id=self.user_id, message='–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω –ø–æ–ª.'
                                                                   '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.')
                        continue

                    params['city'] = city.title()
                    params['user_id'] = self.user_id
                    break

                else:
                    self._sender(user_id=self.user_id, message='–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.')

        VkBot.db.add_search_params(params=params)
        self._sender(user_id=self.user_id, message='–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", –∞ –∑–∞—Ç–µ–º "–ù–∞–π—Ç–∏ –ø–∞—Ä—É"!')

    def _download_pairs_from_db(self):
        '''–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ–¥ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –∏ —Å–æ–∑–¥–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä.'''
        self.pairs = VkBot.db.find_a_couple(self.user_id)
        self.pair_iter = iter([])
        if self.pairs:
            self.pair_iter = iter(self.pairs)

    def _output_pair(self, pair):
        '''–§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –ø–∞—Ä—ã'''
        user = list(pair)
        message = '\n'.join([str(param) for param in user[1:-1]])
        self._sender(user_id=self.user_id, message=f'üíó\n{message}', attachment=user[-1])
        self.partner_id = user[0]

    def _return_pair(self):
        '''–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –∏–∑ –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –∏ –≤—ã–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.'''
        try:
            pair = next(self.pair_iter)
            self._output_pair(pair=pair)

        except StopIteration:
            self._download_pairs_from_db()

            if self.pairs:
                pair = next(self.pair_iter)
                self._output_pair(pair=pair)

            else:
                self._sender(user_id=self.user_id,
                             message='–ù–∏–∫—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –ø–æ–∏—Å–∫–∞ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.')

        except AttributeError:
            self._sender(user_id=self.user_id,
                         message='–ù–∏–∫—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –ø–æ–∏—Å–∫–∞ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.')


def main():
    vk_client = VkBot(token_group, service_key)
    vk_client.bot_session()


if __name__ == '__main__':
    main()
